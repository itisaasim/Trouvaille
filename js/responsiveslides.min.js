/*! http://responsiveslides.com v1.54 by @viljamis */
(function(c,I,B){c.fn.responsiveSlides=function(l){var a=c.extend({auto:!0,speed:500,timeout:4E3,pager:!1,nav:!1,random:!1,pause:!1,pauseControls:!0,prevText:"Previous",nextText:"Next",maxwidth:"",navContainer:"",manualControls:"",namespace:"rslides",before:c.noop,after:c.noop},l);return this.each(function(){B++;var f=c(this),s,r,t,m,p,q,n=0,e=f.children(),C=e.size(),h=parseFloat(a.speed),D=parseFloat(a.timeout),u=parseFloat(a.maxwidth),g=a.namespace,d=g+B,E=g+"_nav "+d+"_nav",v=g+"_here",j=d+"_on",
w=d+"_s",k=c("<ul class='"+g+"_tabs "+d+"_tabs' />"),x={"float":"left",position:"relative",opacity:1,zIndex:2},y={"float":"none",position:"absolute",opacity:0,zIndex:1},F=function(){var b=(document.body||document.documentElement).style,a="transition";if("string"===typeof b[a])return!0;s=["Moz","Webkit","Khtml","O","ms"];var a=a.charAt(0).toUpperCase()+a.substr(1),c;for(c=0;c<s.length;c++)if("string"===typeof b[s[c]+a])return!0;return!1}(),z=function(b){a.before(b);F?(e.removeClass(j).css(y).eq(b).addClass(j).css(x),
n=b,setTimeout(function(){a.after(b)},h)):e.stop().fadeOut(h,function(){c(this).removeClass(j).css(y).css("opacity",1)}).eq(b).fadeIn(h,function(){c(this).addClass(j).css(x);a.after(b);n=b})};a.random&&(e.sort(function(){return Math.round(Math.random())-0.5}),f.empty().append(e));e.each(function(a){this.id=w+a});f.addClass(g+" "+d);l&&l.maxwidth&&f.css("max-width",u);e.hide().css(y).eq(0).addClass(j).css(x).show();F&&e.show().css({"-webkit-transition":"opacity "+h+"ms ease-in-out","-moz-transition":"opacity "+
h+"ms ease-in-out","-o-transition":"opacity "+h+"ms ease-in-out",transition:"opacity "+h+"ms ease-in-out"});if(1<e.size()){if(D<h+100)return;if(a.pager&&!a.manualControls){var A=[];e.each(function(a){a+=1;A+="<li><a href='#' class='"+w+a+"'>"+a+"</a></li>"});k.append(A);l.navContainer?c(a.navContainer).append(k):f.after(k)}a.manualControls&&(k=c(a.manualControls),k.addClass(g+"_tabs "+d+"_tabs"));(a.pager||a.manualControls)&&k.find("li").each(function(a){c(this).addClass(w+(a+1))});if(a.pager||a.manualControls)q=
/**
 * Initializes and manages a slider or carousel functionality
 * @param {Object} a - Configuration object containing various options
 * @param {jQuery} f - jQuery object representing the slider container
 * @param {jQuery} k - jQuery object representing anchor elements within the slider
 * @param {function} r - Function to update the active state of pager/control elements
 * @param {function} t - Function to start auto-sliding functionality
 * @param {function} m - Function to manage auto-sliding and pause behavior
 * @param {jQuery} q - jQuery object representing pager or manual control elements
 * @returns {void} This function does not return a value
 */
/**
 * Handles pagination and auto-sliding functionality for a carousel or slider
 * @param {Object} a - Configuration object containing various options
 * @param {jQuery} f - jQuery object representing the carousel/slider container
 * @param {jQuery} k - jQuery object representing the carousel/slider items
 * @param {jQuery} q - jQuery object representing the pagination or manual control elements
 * @param {number} n - Current slide index
 * @param {number} C - Total number of slides
 * @param {number} D - Auto-slide interval in milliseconds
 * @returns {void} This function doesn't return a value
 */
/**
 * Implements a carousel or slider functionality with automatic and manual controls
 * @param {Object} a - Configuration object for the carousel
 * @param {boolean} a.auto - Flag to enable automatic sliding
 * @param {boolean} a.pager - Flag to enable pager functionality
 * @param {boolean} a.manualControls - Flag to enable manual controls
 * @param {boolean} a.pause - Flag to enable pause on hover
 * @param {boolean} a.pauseControls - Flag to control pause behavior for manual controls
 * @param {number} D - Interval duration for automatic sliding
 * @returns {void} This function doesn't return a value
 */
/**
 * Configures and initializes a slider or carousel component
 * @param {Object} a - Configuration object containing various options
 * @param {jQuery} k - jQuery object representing the slider container
 * @param {number} n - Current slide index
 * @param {number} C - Total number of slides
 * @param {jQuery} f - jQuery object representing the slider element
 * @param {jQuery} q - jQuery object representing pagination or manual control elements
 * @returns {void} This function doesn't return a value
 */
/**
 /**
  * Handles hover and navigation controls for a slider or carousel component
  * @param {Object} a - Configuration object containing control options
  * @param {jQuery} q - jQuery object representing the slider/carousel element
  * @param {Function} m - Function to start or resume automatic sliding
  * @param {Array} e - Array of slide elements
  * @param {number} n - Current slide index
  * @param {number} C - Total number of slides
  * @param {Function} z - Function to transition to a specific slide
  * @param {Function} r - Function to update pager or manual controls
  * @returns {void} This function does not return a value
  */
 * Handles pagination and auto-scrolling functionality for a slider or carousel
 * @param {Object} a - Configuration object containing various options
 * @param {jQuery} k - jQuery object representing anchor elements
 * @param {Function} r - Function to update the active state of pagination elements
 * @param {number} n - Current slide index
 * @param {number} C - Total number of slides
 * @param {Function} z - Function to transition to a specific slide
 * @param {jQuery} f - jQuery object representing the slider container
 * @param {jQuery} q - jQuery object representing pagination elements
 * @returns {void} This function doesn't return a value
 */
k.find("a"),r=function(a){q.closest("li").removeClass(v).eq(a).addClass(v)};a.auto&&(t=function(){p=setInterval(function(){e.stop(!0,!0);var b=n+1<C?n+1:0;(a.pager||a.manualControls)&&r(b);z(b)},D)},t());m=function(){a.auto&&(clearInterval(p),t())};a.pause&&f.hover(function(){clearInterval(p)},function(){m()});if(a.pager||a.manualControls)q.bind("click",function(b){b.preventDefault();a.pauseControls||m();b=q.index(this);n===b||c("."+j).queue("fx").length||(r(b),z(b))}).eq(0).closest("li").addClass(v),
/**
 * Handles navigation controls for a slider or carousel component
 * @param {Object} a - Configuration object containing various settings
 * @param {jQuery} q - jQuery object representing the slider/carousel element
 * @param {Function} m - Function to start or resume automatic sliding
 * @param {Array} e - Array of slide elements
 * @param {number} n - Current slide index
 * @param {number} C - Total number of slides
 * @param {Function} z - Function to transition to a specific slide
 * @param {Function} r - Function to update pager or manual controls
 * @returns {void} This function doesn't return a value
 */
/**
 * Handles navigation controls for a slider or carousel
 * @param {Object} a - Configuration object containing control options
 * @param {jQuery} q - jQuery object representing the slider/carousel element
 * @param {Function} m - Function to start or resume automatic sliding
 * @param {jQuery} f - jQuery object representing the slider/carousel container
 * @param {Array} e - Array of slide elements
 * @param {number} C - Total number of slides
 * @param {number} n - Current slide index
 * @param {Function} z - Function to transition to a specific slide
 * @param {Function} r - Function to update pager or manual controls
 * @returns {undefined} This function does not return a value
 */
a.pauseControls&&q.hover(function(){clearInterval(p)},function(){m()});if(a.nav){g="<a href='#' class='"+E+" prev'>"+a.prevText+"</a><a href='#' class='"+E+" next'>"+a.nextText+"</a>";l.navContainer?c(a.navContainer).append(g):f.after(g);var d=c("."+d+"_nav"),G=d.filter(".prev");d.bind("click",function(b){b.preventDefault();b=c("."+j);if(!b.queue("fx").length){var d=e.index(b);b=d-1;d=d+1<C?n+1:0;z(c(this)[0]===G[0]?b:d);if(a.pager||a.manualControls)r(c(this)[0]===G[0]?b:d);a.pauseControls||m()}});
/**
 * Applies pause controls and maxwidth functionality to an element
 * @param {Object} a - Configuration object containing pause control settings
 * @param {jQuery} d - jQuery object representing the target element
 * @param {number} p - Interval ID for the animation or slideshow
 * @param {Function} m - Function to resume the animation or slideshow
 * @param {Object} l - Configuration object containing maxwidth settings
 * @param {number} u - Maximum width value for the element
 * @param {jQuery} f - jQuery object representing the element to apply maxwidth to
 * @param {Object} I - Window object for binding resize event
 * @returns {undefined} This function does not return a value
 */
/**
 * Handles hover events for pause controls and performs width adjustments
 * @param {jQuery} a - The jQuery object representing the element with pause controls
 * @param {jQuery} d - The jQuery object to attach hover events
 * @param {number} p - The interval ID to be cleared on hover
 * @param {Function} m - The function to be called when hover ends
 * @param {Object} l - Configuration object containing maxwidth property
 * @param {number} u - The maximum width value
 * @param {jQuery} f - The jQuery object to apply width adjustments
 * @param {Object} I - The window object for binding resize event
 * @returns {undefined} This function does not return a value
 */
/**
 * Handles pause controls and maxwidth functionality for a jQuery plugin
 * @param {Object} a - Configuration object containing pauseControls and maxwidth settings
 * @param {Object} d - jQuery object representing the target element
 * @param {number} p - Interval ID for the animation or slideshow
 * @param {Function} m - Function to resume or restart the animation
 * @param {number} u - Maximum width value for the element
 * @returns {undefined} This function doesn't return a value
 */
/**
 * Handles pause controls and maxwidth functionality for a jQuery plugin
 * @param {Object} a - Configuration object containing plugin options
 * @param {Object} d - jQuery object representing the target element
 * @param {number} p - Interval ID for the animation or slideshow
 * @param {Function} m - Function to start or resume the animation
 * @param {Object} l - Object containing plugin settings
 * @param {number} u - Maximum width value for the element
 * @param {Object} f - jQuery object representing the element to be resized
 * @param {Object} I - Window object
 * @returns {undefined} This function does not return a value
 */
a.pauseControls&&d.hover(function(){clearInterval(p)},function(){m()})}}if("undefined"===typeof document.body.style.maxWidth&&l.maxwidth){var H=function(){f.css("width","100%");f.width()>u&&f.css("width",u)};H();c(I).bind("resize",function(){H()})}})}})(jQuery,this,0);
